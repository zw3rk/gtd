name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-binaries:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9
        
      - name: Setup Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v11

      - name: Build all binaries
        run: |
          # Build binaries for all platforms
          nix build .#gtd-linux-amd64
          nix build .#gtd-linux-arm64
          nix build .#gtd-darwin-amd64
          nix build .#gtd-darwin-arm64
          
          # Copy binaries to release directory
          mkdir -p release
          cp -L result/bin/gtd release/gtd-linux-amd64
          
          nix build .#gtd-linux-arm64
          cp -L result/bin/gtd release/gtd-linux-arm64
          
          nix build .#gtd-darwin-amd64
          cp -L result/bin/gtd release/gtd-darwin-amd64
          
          nix build .#gtd-darwin-arm64
          cp -L result/bin/gtd release/gtd-darwin-arm64
          
          # Create checksums
          cd release
          sha256sum gtd-* > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/gtd-linux-amd64
            release/gtd-linux-arm64
            release/gtd-darwin-amd64
            release/gtd-darwin-arm64
            release/checksums.txt
          draft: false
          prerelease: false
          generate_release_notes: true

  update-nix-cache:
    name: Update Nix Cache
    runs-on: ubuntu-latest
    needs: build-binaries
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9
        
      - name: Setup Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v11

      - name: Push to cachix
        env:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
        run: |
          if [ -n "$CACHIX_AUTH_TOKEN" ]; then
            nix-env -iA cachix -f https://cachix.org/api/v1/install
            cachix authtoken "$CACHIX_AUTH_TOKEN"
            cachix use gtd
            nix build .# --json | jq -r '.[].outputs | to_entries[].value' | cachix push gtd
          fi
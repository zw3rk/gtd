name: Build and Test

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-nix:
    name: Build with Nix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
        
      - name: Setup Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v11

      - name: Build default package
        run: nix build .#

      - name: Run tests
        run: nix develop -c go test ./...

      - name: Run linter
        run: nix develop -c make lint

      - name: Build all packages
        run: |
          # Build default package for current system
          nix build .#
          # Platform-specific builds can be added when cross-compilation is properly set up

      - name: Test flake checks
        run: nix flake check

  build-go:
    name: Build with Go
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ['1.21', '1.22']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage
        if: matrix.go == '1.22' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.txt
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=5m